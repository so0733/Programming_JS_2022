Let's Get IT 자바스크립트 프로그래밍 [2021.01.21] ------------------------------------------------------

🔎 유용한 사이트
     ◾ MDN Web Docs [https://developer.mozilla.org/ko/docs/Web/JavaScript]
     ◾ 모던 자바스크립트 튜토리얼 [https://ko.javascript.info/intro]
     ◾ 더북 [https://thebook.io/080270/]

📌 JavaScript(JS) : '웹페이지에 생동감을 불어넣기 위해' 만들어진 프로그래밍 언어
     ◾ 스크립트(script) : 자바스크립트로 작성한 프로그램, 웹페이지의 HTML안에 작성, 웹페이지를 불러올 때 스크립트가 자동 실행됨

     ◾ 자바스크립트 엔진을 통해 브라우저 뿐만 아니라 서버에서도 실행 가능함
	크롬, 엣지, 오페라	- V8
	파이어폭스	- 스파이더몽키(SpiderMonkey)
	사파리		- 웹킷(WebKit)

     ◾ 자바스크립트 장점
	1. HTML/CSS와 완전히 통합할 수 있음
	2. 간단한 일은 간단하게 처리할 수 있음
	3. 모든 주요 브라우저에서 지원하고 기본 언어로 사용됨

     ◾ 코드 에디터
	Visual Studio Code(VS Code)	- 크로스 플랫폼, 무료
	Sublime Text		- 크로스 플랫폼, 셰어웨어
	WebStorm		- 크로스 플랫폼, 유료
	Atom			- 크로스 플랫폼, 무료

     ◾ 브라우저 개발자 도구
	1. 브라우저에 마우스 커서를 둔 상태로 F12 누름
	2. 개발자 도구가 열리면 상단에 있는 메뉴 중 Console 탭 클릭
	프롬프트(prompt) : Console 탭 아래에 빈 공간에 > 모양 옆에 코드 입력

     ◾ 인터프리터(interpreter) 방식 : 코드를 한 덩어리씩 실행해 결과를 출력하는 방식

     ◾ REPL(Read-Eval-Print Loop)
	Read	- 코드를 한줄씩 입력받음
	Eval 	- 받은 입력을 평가함
	Print	- 결과를 출력함
	Loop	- 새로운 입력을 기다리는 과정을 반복함

📌 순서도
     ◾ 순서도에서 사용하는 도형과 기호
	두 겹의 원	- 시작과 끝
	타원		- 일반 절차
	마름모		- 판단 절차
	두겹의 사각형	- 특수한 상황(대기, 이벤트 발생)
	화살표		- 다음 절차로 가는 흐름

Let's Get IT 자바스크립트 프로그래밍 [2021.01.24] ------------------------------------------------------

📌 코드 작성 규칙
     ◾ 세미콜론(;) : 명령이 끝난 후 붙여 다음 명령어를 구분함
     ◾ 주석 : 설명을 작성한 부분
	1. 한 줄 주석	- 주석 앞에 //를 넣음
	2. 여러 줄 주석	- 주석 처리 하고 싶은 부분을 /* */로 감쌈
     ◾ 들여쓰기 : 코드의 가독성 향상이 됨

📌 자료형(data type) : 값의 종류			🔎 값(value) : 프로그램이 조작할 수 있는 데이터
     1. 문자열(string) : 문자들이 하나 이상 나열되어 있음	🔎 연산자(operator) : 어떠한 값에 특정 작업을 수행하라는 기호
	◾ \n		- 문자열 내에서 문자들을 여러 줄에 걸쳐 나타나게함
	◾ 템플릿 리터럴	- 백틱(`)으로 감싸진 문자열

     2. 숫자(number) : 따옴표로 감싸지 않고 그대로 작성
	◾ Infinity	- 무한 값 (∞, 무한대)
	◾ NaN	- 숫자로 인식됨

	◾ bigInt : 정수 리터럴 끝에 n을 붙여 길이에 상관없이 정수를 나타냄
	◾ parseInt : 문자열을 정수로만 바꿈
	◾ parseFloat : 문자열을 실수로 바꿈

	🔎 진법 표현
	   2진법	- 0b(숫자영, 소문자b)를 숫자 앞에 붙임
	   8진법	- 0o(숫자영, 소문자o)를 숫자 앞에 붙임
	   16진법	- 0x(숫자영, 소문자x)를 숫자 앞에 붙임

	🔎 산술 연산자 : + (덧셈), - (뺄셈),  *(곱셈), /(나눗셈), %(나머지), **(거듭제곱)
	🔎 형 변환(type casting) : 값의 자료형이 바뀌는 현상 또는 바꾸는 행위

     3. 불 값(boolean) : true와 false를 나타냄
	◾ true	- 참인 값
	◾ false	- 거짓인 값

	◾ == : 양쪽 값이 같은지 비교하는 연산자
	◾ === : 값을 비교할 때 값 뿐만 아니라 자료형도 같은지 비교함
	◾ != : 양쪽 값이 다른지 비교하는 연산자

	🔎 논리 연산자
	   ◾ && 연산자	- 그리고, 좌측 식과 우측 식이 모두 true여야 결과도 true
	   ◾ || 연산자	- 또는, 좌측 식이나 우측 식 둘 중 하나만 true면 결과는 true
	   ◾ ! 연산자	- 참을 거짓으로 거짓을 참으로 만드는 연산자
 	
	🔎 charCodeAt : 문자의 번호를 나타냄

     4. 빈 값
	◾ undefined : 항상 부수적으로 undefined가 식의 결과값으로 반환됨
	◾ null : 빈 값

	🔎 typeof 연산자 : 피연산자의 자료형을 알려줌


📌 변수(variable) : 변하는 수, 데이터를 저장할 때 쓰이는 '이름이 붙은 저장소'
     ◾ let		let 변수명 = 식;
     ◾ var		var 변수명 = 식;

     ◾ 초기화 : 변수를 선언함과 동시에 값을 대입함
     ◾ 예약어 : 자바스크립트 내부에서 특정 역할을 수행하므로 변수명으로 쓸 수 없음
	await, break, case, catch, class, const, continue, debugger, default, delete, do, else, enum, export, extends, false, finally, for, 
	function, if, import, in, isstanceof, new, null, return, super, switch, this, throw, true, try, typeof, var, void, while, with, yield

📌 상수(constant) : 변하지 않는 수
     ◾ const	const 변수명 = 식;

📌 alert : 메시지를 보여줌
📌 prompt() : 직접 값을 입력할 수 있음

Let's Get IT 자바스크립트 프로그래밍 [2021.01.25] ------------------------------------------------------

🔎 콘솔 창에서 줄바꿈 : Shift + Enter

📌 조건문 : 주어진 조건에 따라 코드를 실행하거나 실행하지 않는 문	
     1. if문
	if (조건식) {
	   실행문1;
	   실행문2;
	}
     ◾ else 절
	if (조건식) {	// 조건식이 참인 값일 때 실행
	   실행문;
	} else {		// 조건식이 거짓인 값일 때 실행
	   실행문;
	}
     ◾ else if 복수 처리
	if (조건식) {
	   실행문;
	} else if (조건식) {
	   실행문;
	} else {
	   실행문;
	}
     ◾ if-else if문
	if (조건식) {
	   실행문;
	} else if (조건식) {
	   실행문;
	} else if (조건식) {
	   실행문;
	}

     2. switch문 : 특정 변수를 다양한 상황에서 비교함
	switch (조건식) {
	   case 비교 조건식:
	      실행문;
	}

     ◾ 조건부 연산자(삼항 연산자) : 식으로 결과값이 출력됨
	조건식 ? 참일 때 실행되는 식 : 거짓일 때 실행되는 식

📌 반복문
     1. while문 : 조건식이 참인 동안 반복해서 실행문을 실행
	while (조건식) {
	   실행문1;
	   실행문2;
	}

     2. do-while문 : 본문을 최소 한번 실행함
	do {
	   실행문
	} while (조건식)

     3. for문
	for (시작; 조건식; 종료식)
	   실행문;

     ◾ break문 : 반복문을 멈춤

     ◾ continue문 : 코드 실행을 건너뜀

     ◾ 중첩 반복문 : 반복문 안에 반복문이 들어 있음

Let's Get IT 자바스크립트 프로그래밍 [2021.01.25] ------------------------------------------------------

